# Avoid smurf attack
# Smurf attacks involve the attacker sending a large number of ICMP Echo Request messages with a spoofed source address,
# causing many hosts to send Echo Reply messages to the victim. 
# By ignoring ICMP broadcasts, the server will not respond to these types of attacks.
net.ipv4.icmp_echo_ignore_broadcasts = 1
 
# Protection for bad ICMP error messages
# Some attackers may try to exploit malformed or malicious ICMP error messages to launch attacks.
# By ignoring bogus error responses, the server will be less vulnerable to these types of attacks.
net.ipv4.icmp_ignore_bogus_error_responses = 1
 
# SYN cookies for SYN flood attack protection
# SYN flood attacks involve an attacker sending a large number of SYN packets to the server,
# overwhelming the server's ability to process them and causing a denial of service.
# SYN cookies allow the server to track the state of connections without using memory,
# mitigating the impact of SYN flood attacks.
net.ipv4.tcp_syncookies = 1

# Enable TCP Fast Open for both outgoing and incoming connections
# Set the maximum number of unacknowledged Fast Open requests to 10
net.ipv4.tcp_fastopen=3
net.ipv4.tcp_fastopen_qlen=10

# Log spoofed, source routed, and redirect packets
# By logging these types of packets, it is easier to identify and track down malicious activity on the server.
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1
 
# No source routed packets
# Source routed packets allow the sender to specify the exact path that the packet should take through the network.
# By rejecting these types of packets, the server will be less vulnerable to attacks that rely on manipulating the packet's route.
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
 
# Reverse path filtering
# Reverse path filtering helps to prevent spoofed packets from being accepted by the server.
# It works by checking the source address of incoming packets against the route that the packet took to reach the server.
# If the source address is not reachable through that route, the packet is considered to be spoofed and is dropped.
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1
 
# Don't alter routing tables
# These kernel parameters prevent users from altering the server's routing tables,
# which could be used to redirect traffic and launch attacks.
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
 
# Don't act as a router
# By disabling packet forwarding, the server will not act as a router and will not forward packets to other networks.
# This can help to prevent the server from being used as a pivot point for attacks.
net.ipv4.ip_forward = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
 
# ExecShield
# ExecShield is a security feature that helps to protect against buffer overflow attacks
kernel.exec-shield = 1
kernel.randomize_va_space = 1
 
# IPv6 Configuration
# These kernel parameters control various aspects of IPv6 operation on the server.
# Disabling router solicitations, accepting router preferences, and autoconfiguration can help to reduce the attack surface of the server.
# Additionally, setting the maximum number of addresses and limiting duplicate address detection can help to improve performance.
net.ipv6.conf.default.router_solicitations = 0
net.ipv6.conf.default.accept_ra_rtr_pref = 0
net.ipv6.conf.default.accept_ra_pinfo = 0
net.ipv6.conf.default.accept_ra_defrtr = 0
net.ipv6.conf.default.autoconf = 0
net.ipv6.conf.default.dad_transmits = 0
net.ipv6.conf.default.max_addresses = 1
 
# File descriptor optimization for load balancers
# The maximum number of file descriptors (or handles) that the server can have open at any given time can impact performance.
# By increasing this value, the server will be able to handle more connections simultaneously.
fs.file-max = 65535
 
# Increase maximum PIDs
# The maximum number of process IDs that the kernel can generate can impact performance.
# By increasing this value, the kernel will be able to create more processes without reusing PIDs.
kernel.pid_max = 65536
 
# Increase system IP port limits
# The range of ports that the server can use for incoming connections can impact performance.
# By increasing this range, the server will have more available ports to use for new connections.
net.ipv4.ip_local_port_range = 2000 65000
 
# Increase TCP buffer sizes
# The size of the buffers used for sending and receiving TCP data can impact performance.
# By increasing these values, the server will be able to handle more data at once, potentially improving performance.net.ipv4.tcp_rmem = 4096 87380 8388608
net.ipv4.tcp_wmem = 4096 87380 8388608
 
# Auto tuning TCP buffer limits
# These kernel parameters allow the TCP stack to automatically adjust the size of its buffers based on available memory.
# By enabling this feature, the server can more efficiently use its memory resources to handle incoming traffic.net.core.rmem_max = 8388608
net.core.wmem_max = 8388608
net.core.netdev_max_backlog = 5000
net.ipv4.tcp_window_scaling = 1